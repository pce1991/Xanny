* Tasks
** TEXTS
*** TODO
**** TODO read maps from files
**** TODO search for phrase in one or more texts
***** TODO search by "contains", grammer, subject
**** TODO Build UI for navigating/comparing.
     come up with a lot of shortcuts. 
     use printf or format for console comparison. Line things up like this.
	 xlansaho htaoe uh h atoheun ha saos oennte
	 htnao hteno assssr,c.p mntsntogr ";htneoas"	htneoas ahhoh ehho ah o
	 aoeuhnaoseunonuh ao a o b sabs ;r u baoeu	htnasoeutnhaoesnuthaoeu
    so that the liked text begins where it's referenced, then continues through a certain point, so you could say you only want the context of the line, or the rest of the chapter.
**** TODO word hyphenation/syllabification
     what are the difeerences? use split to get vector of syllables to count.
**** TODO begin using wordnet to find meaning
**** TODO summarize texts
**** TODO Markov generator
    this leads to an advertisement generator. use wordnet! something like 
"you are a attribute." "Be a concept." "intensifier quality"
**** TODO add metadata to maps
     things like: section-mapped? line/sentence-based segments. author, title, 
**** TODO mark data by time, train in chronological order
**** TODO expand map to go by sentence, or generate a new one from regular.
     need for connecting words to definitions or annotations, like in Finnegan's wake.
**** TODO POETRY AID
     Check meter, if it doesn't fit, do replacement like in spelling correction, checking the cost of word replacements that'd make it conform.
     Check for alliteration, shoving how long the sequence is, any breaks like "and" between words. 
     Look up synonyms in wordnet, but double check with webster's? Maybe its only wordnet definitions that are lacksuster, and it'd be interesting to find synonyms that are a closer match psychologically.
**** TODO map multiple translations to the same index, so you have {[0 1 1 1] {:KJV "" :NRSV ""}}
***** texts might have different formatting though.
**** TODO do information extraction for named entities and relations
**** TODO build corpora
     Partially there, just need nice formatting, and to keep track of where it occurred. Down to the word, or just "it occurred in this sentence"
**** TODO Write regex that gives you an expression that solves the two cases you want to match.
**** TODO REGEX dictionary. Give me all the words containing an A, an X, and a G. 
     So useful.
     use re-seq
**** TODO Detect how to format. 
     Do this by building a raw corpora of lines, then see if there are similar patterns in between lines it can be a canditate; get a count of how many similarities there are to "CHAPTER ONE" or something like that. 

     It'd be really hard to do with whitespace, unless I'm counting sequences.

     I guess it'd assume that the most frequent markers are sections, the next part, book, then volume. 
**** TODO highlighting/note taking
     When you make a note, it creates a new map of notes, with a the key of the text noted as a new key mapped to the note. When you look at an annotated text, it shows them in parallel
**** TODO Easy user interaction
     Since the index is always 5 long, the user needs a way to interact with the text as if the index is only as long as it is full. [0 0 1 1 1] should be treated like [1 1 1] by the user. It still should be spoken of though with part as the 1st. Maybe just include meta-data that explains what the largest unit is. Fetch will require them to put in {0 0, 1 0, 2 1, ...} to access the first part of a tri-index. They should be able to treat it like 2 in the first funtional index. 

     THis also includes having an easy way to access files other than typing the whole thing out.
**** Generate latin poetry about clouds.
     I need a way to count syllables for laitn then.
**** TODO Create a list of my vocab words, then look up in dictionary
**** TODO Use clojure-script for online UI
     Build a repl like they use Poetroid.
**** TODO CREATE TESTS TO RUN AUTOMATICALLY
     There are too many texts for me to check each of them to make sure they still work after a change, so I should run some tests which would make my life a lot easier. 
*** FOR CONSEDERATION
**** New map design 
     {:vols {0 {:parts {1 {:title "GEN" :sec {1 {:title "chap 1"} 2 {:title  "chap 2" :contents {1 "In the beginning"}}}}}} 1 {}}}
**** should you be able to get the 10,000th word? Brad suggested it be mapped this way
**** attach webster difintitions to wordnet, cncluding pronunciation.
     in fact, do this for many dictionaries, so its kind of a meta dictinary: one chrnicling definitions rather than use in society. Consider all of the variations between dictionaries.
**** MACHINE LEARNING
     Use this to find the formats of text. With enough training data it should be pretty good, even on something like Gutenberg's erraticism. Use Weka
*** ISSUES
**** "quotes like this" --by me are mapped as two different sentences.
     this sucks because quotes should be considered a whole unit, or at least be contextualized
**** map sentences doesnt combine philoso-phy into one word.
**** Its slower to load the map than to do the mapping... :(
**** Why does it map an empty line, even when I've told it not to, but only the last one.
*** TEXTS TO MAP
**** Ulysses 
	(what's wrong with current map again? that's right, two lines mark a new part! but there are other occurences where it does not! ugh. wait, that was gutenbergs, another uses ***** which is so much better, sometimes uses fewer to denote a change in character in that one episode.)
    
**** Finnegans Wake (remove those copywright chunks between chapters)
**** The Divine Comedy (include both translations)
**** Fairie Queene (strip out the title at top of each page)
     This copy is so fucked. I hate this shit. There are weird markings like "TM" (WTF!?), so cut these, and the text adds spaces between the first two letters at beginning of canto. 
     PDFminer doesnt help cause it adds a blank line between the start of a canto and the rest of it. There might be cause to map poetry by mapping a certain number of lines before increasing the count, but it'd require a bit of retooling. 
     I could do something like remove all single lines, then add them in every 8 lines or something. Watch out for these things though: cantos are one line, arguments are 4, and titles are variable. 
**** Shakespeare
     Problem with indentation, and multiple markers, find a may to normalize it, so that first line is always indented, or only 2 spaces deep. 
     
     0 indexing is a little odd, not just here, but in general. Here the first volume is 1, the first act is 1, but the first scene is 0. Maybe I could increment both, but that seems like trouble; I could edit the text and split them up. There may be a bigger problem with 0 indexing though... look into it since its been a constant weakness of mine. 

     Needs to also put the description somewhere consistent, I guess at [1 1 1 0 1] since scene title is at [1 1 1 0 0], what about the scene of the play at beginning of each, usually marked with SCENE: with the description on that line or the next; usually follows dramatis personae. 

     Cut the lines that aren't ACT X SCENE 1. ACT X SCENE 2 should just be SCENE 2.
     
     Maybe normalize the numbers/roman numerals. 
         
     Antony and cleopatra has WEIRD act/scene markers. The Scenes are getting mapped despite the (not (match)) part. Write a funtion to remove these ugly lines. Cut-chunk should take a vector of things to cut.
     
     The Comedy of Errors isn't notched because of course it isnt! Here the beginnig is to the left and the line is notched. ugh. I need a function that justifies all the text. So if it isnt all caps, and doesnt match certain parameters, it gets notched. If it's already notched and doesnt begin with a characters name, then it'll be indented. Also it's mapping a guys name one time... DROMIO OF SYRACUSE. So I need something that'll push text over, but not for the whole thing, just for a segment; I'll use a start and stop pattern. 

     Some Dramatis Personae are all caps... how should I solve this? analyze text. 

     Titles are sometimes listed twice! FUCK. As are things like epilogues. 

     UGH! it maps lowercase things as a title, I have no idea why. But sometimes it doest get the actual all-caps part! WTF!?!?!?! Why doesnt it count the next line, Why Lear King of Britain, but not King of France? How could such a thing even happen...

     I need a way when splitting the text up that I grab the poems at the beginning and at the end. 
**** Cantebury Tales (unforeseen complication will arise)
     I can use the weird gutenberg one with lots of <2> and experiment with adding footnotes and translations, but do I tie it to line, or associate a new key, which is the word its tied to, thus the sentence contains a key which is linked to a definition.
**** Samson Agonist
**** Various Milton Poems and essays 
**** ILLIAD
     Get rid of illustrations with a chunk remover, and modify the start and end matcher to match Uppercase patterns

     it has no "produced by", this was unforeseen; give it its own start.

     dont worry about the argument, just get rid of it by not mapping anything that's not indented. still would be nice to have a cut-chunk that works on arbitrary number of chunks. 

     I have to figure out a way to deal with footnotes, I guess they'd be a separate book or volume

**** Odyssey
     How do I do this one and avoid the argument? It's not indented by 2 spaces like the Iliad... remove argument from text? There arent any illustrations that need to go, but that's kind of cheeting.
     -use push lines. I'd say until it hits a blankline, but some arguments are multiple paragraphs. 

     Push lines, but give it a length pattern instead of normal regex. that way it'll push everything that isnt the argument. But it'll push parts of the argument that are shorter...

**** Dictionary
     Just get keys for now to experiment with a regex dictionary.

     Can't use map-text for this

**** Encyclopedia
     I need a way to combine a whole folder of files into one text.
*** 10 things to do as of <2014-05-29 Thu>
**** MAP TEXTS, clean up shakespeare.
     I need to incorporate split-lines to do this. Need to map the faerie queene also, and Samson Agonist.
**** Add translations
     Hard to find something other than KJV, so use the odyssey and illiad for experiments. 
**** Add title and author to the metadata of map.
     Make sure to not lose that data in clear-text

     Or don't put it in meta-data. I might want to avoid putting the book title, or chapter titles as an entry, but give it something like :title :contents

     Just enter it manually, it's not worth the trouble and erraticism. 
**** Make a clean corpora, list the index of each word, combine corpora.    
     Get corpora for each text, but also for the lot of them. 
**** Make n-gram models.
**** begin wordnet, get hypernyms!
     Later I can get all words that reduce to that hypernym, or include that hypernym in their tree. A depth could be specified.
**** Save and load maps! 
     to one file?
**** Start adding notes and highlighting, and referning
     Each map will have :author :title :text and :notes. Notes have the same key as the text they're attached to. 
     How do I handle highlighting? Create a vector of keys I think. I'll need to know the proper counts to make sure a highlight doesnt go overboard. 

     Lines can refernce lines (or a segment map like in fetch) in other texts. Get it down to a word being mapped to every occurrence of it in every text. Reference map would be {index {line {other-map [that-index anther]}}}
**** Map dictionary to get syllable count, then measure poetic meter. 
*** 5 THINGS to start <2014-06-02 Mon>
**** save and load maps
     Save each author to their own file, this way they don't have to be accessed all at once. 
**** Incorporate notes, save/load. 
     Also build a line-to-line reference system.
**** finish shakespeare
     Comb through this stuff by hand to make sure its all right. Hawlet act 1 doesnt have 6 scenes...

     Exit... when its attached at the end of a character's line should be split. THat means I need cleave-lines to take a vector instead of a single pattern. map re-patern over these so the user can just input strings. 

     I think a play is missing, cause it should be 37 without a lover's complaint. It's pericles. Let push take multiple sections, a map of start and ends. 
      
     Collapse SCENE: with the line below it. 

     Antony and Cleopatra stage directions arent justified.
**** Clean up sentence maps
     Has trouble combing split-lines, recognizing quotes-attributions, retaining " markers. 
     
     I could maybe just use collapse-lines for this. 

     Are quotations all one segment? do they count as a section of their own?
**** Make a names map for a text, and then do n-grams of letters 
*** <2014-06-05 Thu>
    Finish: 
    re-rest
    replace-lines, 
    pull-lines
    Updata all funtions to perform on multiple parts, like push lines needs to work with multiple starts and stops.
*** <2014-06-15 Sun>
    Smush-chunk isnt working, it swallows poem titles in Whitman, it smushes together the chapter title with the inscription in the Quran, and various other things I imagine. It seems to put everything on one line in my toy examples. The problem seems to be with smush-through, because when its off it shouldnt add that to the line and should be retained... I don't know why this would be failing unless end is nil or chunk is empty. Here's the problem! position doesnt work with regex patterns it seems, so when it gets the match-pos its always -1, which means it can't find a proper end with the vector, which means end is still nil! Fixed this but it still doesnt work!
*** Methodology problem
    The maps are written in a way to make sense to me as a user, but it might not be the best way programatically.

    Removing chunks of blanklines might be more combersome for PDFs than just smushing together those breaks. Not always though. 
